////
////  main.cpp
////  CS32 - HOMEWORK 3
////
////  Created by Stefanie Shidoosh on 5/3/17.
////  Copyright Â© 2017 Stefanie Shidoosh. All rights reserved.
////
//
//#include <iostream>
//#include <string>
//using namespace std;
/////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// ANIMAL (BASE) CLASS //////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

class Animal
{
public:
    Animal(string name) : m_name(name){}
    virtual ~Animal() {};
    virtual void speak() const = 0;
    virtual string moveAction() const {return "walk";}
    string name() const { return m_name; }
private:
    string m_name;
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// CAT (DERIVED) CLASS //////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

class Cat : public Animal
{
public:
    Cat(string name): Animal(name){}
    virtual ~Cat() {cout << "Destroying " << name() << " the cat " << endl;}
    virtual void speak() const {cout << "Meow";}
};

//////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// DUCK (DERIVED) CLASS //////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////

class Duck : public Animal
{
public:
    Duck(string name): Animal(name){};
    virtual ~Duck() { cout << "Destroying " << name() << " the duck" << endl;}
    virtual void speak() const { cout << "Quack"; }
    virtual string moveAction() const { return "swim"; }
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////// PIG (DERIVED) CLASS //////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////

class Pig : public Animal
{
public:
    Pig(string name, int weight): Animal(name), m_weight(weight){}
    virtual ~Pig() {cout << "Destroying " << name() << " the pig" << endl;}
    virtual void speak() const;
private:
    int m_weight;
};
void Pig::speak() const
{
    if(m_weight < 170)
        cout << "Oink";
    if(m_weight >= 170)
        cout << "Grunt";
}

/////////////////////////////////////////////SPEC!////////////////////////////////////////////////////////

//void animate(const Animal* a)
//{
//    a->speak();
//    cout << "!  My name is " << a->name()
//    << ".  Watch me " << a->moveAction() << "!\n";
//}
